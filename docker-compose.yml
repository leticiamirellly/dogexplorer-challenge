version: "3.9"

name: dogexplorer

networks:
  internal:
    driver: bridge

volumes:
  dbdata:
  lowdb: 
  redisdata:

services:
  db:
    image: postgres:15.6-alpine
    container_name: db
    restart: unless-stopped
    env_file: .env
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    networks: [internal]
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  backend:
    build:
      context: ./dogexplorer-api
      dockerfile: Dockerfile 
      args:
        NODE_ENV: ${NODE_ENV:-production}
    container_name: backend
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: ${TZ:-UTC}
    depends_on:
      db:
        condition: service_healthy
    networks: [internal]
    volumes:
      - lowdb:${LOWDB_FILE:-/data/db.json}
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${BACKEND_PORT}/api/health || exit 1"]
      start_period: 10s
      interval: 20s
      retries: 3

  frontend:
    build:
      context: ./dogexplorer-web 
      dockerfile: Dockerfile 
      args:
        VITE_BACKEND_URL: http://backend:${BACKEND_PORT}
    container_name: frontend
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: ${TZ:-UTC}
    depends_on:
      backend:
        condition: service_started
    networks: [internal]
    ports:
      - "80:80" 

